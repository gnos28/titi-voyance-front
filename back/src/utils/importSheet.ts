import { GoogleSpreadsheet } from "google-spreadsheet";
import * as dotenv from "dotenv";
import AlphanumericEncoder from "alphanumeric-encoder";

dotenv.config();

type Data = {
  id: number | string;
  [key: string]: string | number | undefined;
};

export const importSheet = async (sheetId: string | undefined) => {
  console.log("importSheet" + sheetId);

  const { GOOGLE_SERVICE_ACCOUNT_EMAIL, GOOGLE_PRIVATE_KEY, EXPORT_SHEET_ID } =
    process.env;

  // let rawdatas = fs.readFileSync("jobseasons-oauth.json", "utf8");

  // let datas = JSON.parse(rawdatas);

  if (
    GOOGLE_SERVICE_ACCOUNT_EMAIL &&
    GOOGLE_PRIVATE_KEY &&
    EXPORT_SHEET_ID &&
    sheetId
  ) {
    const doc = new GoogleSpreadsheet(EXPORT_SHEET_ID);

    await doc.useServiceAccountAuth({
      // env var values are copied from service account credentials generated by google
      // see "Authentication" section in docs for more info
      client_email: GOOGLE_SERVICE_ACCOUNT_EMAIL,
      private_key: GOOGLE_PRIVATE_KEY,
    });

    await doc.loadInfo(); // loads document properties and worksheets

    const sheet = doc.sheetsById[sheetId];

    const rows = await sheet.getRows();

    const { headerValues } = sheet;

    const datas = rows.map((row) => {
      const newObj: { [key: string]: string } = {};

      headerValues.forEach((header) => (newObj[header] = row[header]));

      return newObj;
    });

    return datas;
  }
  return [];
};
